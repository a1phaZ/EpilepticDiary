{"version":3,"sources":["components/rating/Rating.component.js","components/timeline/Element.component.js","components/timeline/List.component.js","components/buttonsPanel/ButtonsPanel.component.js","store/buttonsPanel/actionTypes.js","store/buttonsPanel/actions.js","store/data/actionTypes.js","store/data/actions.js","components/modalPage/Description.ModalPage.js","components/modalPage/Attack.ModalPage.js","components/modalPage/Drugs.ModalPage.js","components/modalPage/ModalPage.component.js","App.js","reportWebVitals.js","_functions/handleModal.js","store/buttonsPanel/reducers.js","_functions/addItemToTimeLine.js","store/data/reducers.js","store/reducers.js","index.js"],"names":["ratingArray","Rating","count","_renderedStars","map","item","className","formatTime","time","date","Date","Intl","DateTimeFormat","hour","minute","format","endSleepButton","Button","variant","onClick","console","log","data-type","data-sub-type","data-color","Element","type","drugs","subType","description","color","quality","strength","series","_renderedDrugs","drug","idx","title","dosage","toLowerCase","List","data","element","ButtonsPanel","_renderedButtons","buttons","button","disabled","icon","aria-hidden","DISABLE_BUTTON","ENABLE_BUTTON","SHOW_MODAL","HIDE_MODAL","disableButton","buttonType","payload","enableButton","showModal","modalType","hideModal","SET_ITEM","setItem","Description","handleClose","handleSubmit","useState","setDescription","Modal","Body","Form","Group","controlId","Label","Control","as","rows","value","onChange","e","currentTarget","Text","Footer","Attack","setCount","setSeries","setStrength","Check","id","label","checked","placeholder","min","max","step","dl","_id","Drugs","drugsList","setDrugs","handleChecked","dataset","_drugs","findIndex","toString","data-id","filter","ModalPageComponent","modal","show","setShow","getTime","store","dispatch","useEffect","onHide","Header","closeButton","Title","App","props","handlerShowModal","handleModalFilter","modals","state","_currentDate","day","month","year","bind","this","Container","modalShow","Component","connect","bindActionCreators","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","handleShowModal","initialState","combineReducers","action","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc696da3.chunk.js","sourcesContent":["import React from 'react';\r\nimport './rating.styles.css';\r\n\r\nconst ratingArray = [1, 2, 3, 4, 5];\r\nconst Rating = ({count}) => {\r\n\tconst _renderedStars = ratingArray.map((item) => {\r\n\t\treturn (<span key={item} className={`fa fa-star ${item <= count && 'checked'}`}/>)\r\n\t})\r\n\treturn (\r\n\t\t<span className={'rating'} >\r\n\t\t\t{_renderedStars}\r\n\t\t</span>\r\n\t)\r\n}\r\n\r\nexport default Rating;\r\n","import React from 'react';\r\nimport Rating from \"../rating/Rating.component\";\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nconst formatTime = (time) => {\r\n\tconst date = new Date(time);\r\n\treturn new Intl.DateTimeFormat('ru-RU', {hour: 'numeric', minute:'numeric'}).format(date);\r\n}\r\n\r\nconst endSleepButton = (\r\n\t<Button variant={'primary'}\r\n\t        onClick={() => {console.log('end sleep')}}\r\n\t        data-type={'Сон'}\r\n\t        data-sub-type={'конец'}\r\n\t        data-color={'badge-primary'}\r\n\t>\r\n\t\t{'Пробуждение'}\r\n\t</Button>\r\n)\r\n\r\nconst Element = ({type, drugs = [], subType, description, time, color, quality, strength, count, series}) => {\r\n\tconst _renderedDrugs = drugs.map((drug, idx) => {\r\n\t\tconst {title, dosage} = drug;\r\n\t\treturn (\r\n\t\t\t<li key={idx}>{title} - {dosage}</li>\r\n\t\t)\r\n\t})\r\n\treturn (\r\n\t\t<div className=\"vertical-timeline-item vertical-timeline-element\">\r\n\t\t\t<div>\r\n\t\t\t\t<span className=\"vertical-timeline-element-icon bounce-in\">\r\n\t\t\t\t\t<i className={`badge badge-dot badge-dot-xl ${color}`}> </i>\r\n\t\t\t\t</span>\r\n\t\t\t\t<div className=\"vertical-timeline-element-content bounce-in\">\r\n\t\t\t\t\t<h4 className=\"timeline-title\">{type}{subType && ` - ${subType}`}{count && ` - ${count}`}</h4>\r\n\t\t\t\t\t{type.toLowerCase() === 'сон' && endSleepButton}\r\n\t\t\t\t\t{description && <p>{description}</p>}\r\n\t\t\t\t\t{quality && <span>Качество сна: <Rating count={quality}/></span>}\r\n\t\t\t\t\t{series && <div><b>Серия</b></div>}\r\n\t\t\t\t\t{strength && <span>Сила приступов: <Rating count={strength}/></span>}\r\n\t\t\t\t\t{drugs && _renderedDrugs}\r\n\t\t\t\t\t<span className=\"vertical-timeline-element-date\">{formatTime(time)}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Element;\r\n","import React from 'react';\r\nimport Element from \"./Element.component\";\r\n\r\nconst List = ({data}) => {\r\n\treturn data.map((element, idx) => {\r\n\t\treturn (\r\n\t\t\t<div key={idx} className=\"vertical-timeline vertical-timeline--animate vertical-timeline--one-column\">\r\n\t\t\t\t<Element {...element}/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t})\r\n}\r\n\r\nexport default List;\r\n","import React from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\nimport './ButtonsPanel.styles.css';\r\n\r\nconst ButtonsPanel = ({buttons}) => {\r\n\tconst _renderedButtons = buttons.map((button, idx) => {\r\n\t\tconst {disabled, variant, onClick, icon, type, subType} = button;\r\n\t\treturn (\r\n\t\t\t<Button key={idx}\r\n\t\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t\t\t\tonClick={onClick}\r\n\t\t\t\t\t\t\tdata-type={type}\r\n\t\t\t\t\t\t\tdata-sub-type={subType}\r\n\t\t\t\t\t\t\tdata-color={variant}\r\n\t\t\t>\r\n\t\t\t\t<i className={`fa ${icon}`} aria-hidden=\"true\"></i>\r\n\t\t\t</Button>\r\n\t\t)\r\n\t})\r\n\treturn (\r\n\t\t<div className={'buttons-panel'}>\r\n\t\t\t{_renderedButtons}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ButtonsPanel;\r\n","export const DISABLE_BUTTON = 'DISABLE_BUTTON';\r\nexport const ENABLE_BUTTON = 'ENABLE_BUTTON';\r\nexport const SHOW_MODAL = 'SHOW_MODAL';\r\nexport const HIDE_MODAL = 'HIDE_MODAL';","import {DISABLE_BUTTON, ENABLE_BUTTON, HIDE_MODAL, SHOW_MODAL} from \"./actionTypes\";\r\n\r\nexport const disableButton = (buttonType) => {\r\n\treturn {\r\n\t\ttype: DISABLE_BUTTON,\r\n\t\tpayload: {\r\n\t\t\ttype: buttonType\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const enableButton = (buttonType) => {\r\n\treturn {\r\n\t\ttype: ENABLE_BUTTON,\r\n\t\tpayload: {\r\n\t\t\ttype: buttonType\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const showModal = (modalType) => {\r\n\treturn {\r\n\t\ttype: SHOW_MODAL,\r\n\t\tpayload: {\r\n\t\t\tmodalType: modalType\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const hideModal = () => {\r\n\treturn {\r\n\t\ttype: HIDE_MODAL\r\n\t}\r\n}","export const SET_ITEM = 'SET_ITEM';","import {SET_ITEM} from \"./actionTypes\";\r\n\r\nexport const setItem = (item) => {\r\n\treturn {\r\n\t\ttype: SET_ITEM,\r\n\t\tpayload: {\r\n\t\t\titem\r\n\t\t}\r\n\t}\r\n}","import React, {useState} from 'react';\r\nimport {Button, Form, Modal} from \"react-bootstrap\";\r\n\r\nexport const Description = ({handleClose, handleSubmit}) => {\r\n\tconst [description, setDescription] = useState('');\r\n\tconst handleChange = (e) => {\r\n\t\tsetDescription(e.currentTarget.value);\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<Form.Group controlId=\"formDescription\">\r\n\t\t\t\t\t\t<Form.Label>Описание</Form.Label>\r\n\t\t\t\t\t\t<Form.Control as=\"textarea\" rows={3} value={description} onChange={handleChange}/>\r\n\t\t\t\t\t\t<Form.Text className=\"text-muted\">\r\n\t\t\t\t\t\t\tВведите описание\r\n\t\t\t\t\t\t</Form.Text>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t</Form>\r\n\t\t\t</Modal.Body>\r\n\t\t\t<Modal.Footer>\r\n\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>\r\n\t\t\t\t\tЗакрыть\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tconst item = {\r\n\t\t\t\t\t\t\tdescription: description,\r\n\t\t\t\t\t\t\ttype: 'Еда',\r\n\t\t\t\t\t\t\tcolor: 'badge-success'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\thandleSubmit(item)\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tdisabled={!description}\r\n\t\t\t\t>\r\n\t\t\t\t\tДобавить\r\n\t\t\t\t</Button>\r\n\t\t\t</Modal.Footer>\r\n\t\t</>\r\n\t)\r\n}","import React, {useState} from 'react';\r\nimport {Button, Form, Modal} from \"react-bootstrap\";\r\n\r\nexport const Attack = ({handleClose, handleSubmit}) => {\r\n\tconst [count, setCount] = useState(1);\r\n\tconst [series, setSeries] = useState(false);\r\n\tconst [strength, setStrength] = useState(1);\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<Form.Group controlId={'formAttackSeries'}>\r\n\t\t\t\t\t\t<Form.Check\r\n\t\t\t\t\t\t\ttype={'checkbox'}\r\n\t\t\t\t\t\t\tid={'checkbox-series'}\r\n\t\t\t\t\t\t\tlabel={'Серийные приступы?'}\r\n\t\t\t\t\t\t\tchecked={series}\r\n\t\t\t\t\t\t\tonChange={() => {setSeries(!series)}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\r\n\t\t\t\t\t{series && <Form.Group controlId={'formAttackCount'}>\r\n\t\t\t\t\t\t<Form.Label>Кол-во приступов</Form.Label>\r\n\t\t\t\t\t\t<Form.Control type={'number'} placeholder={'Кол-во приступов'} value={count} onChange={(e) => {setCount(e.currentTarget.value)}}/>\r\n\t\t\t\t\t</Form.Group>}\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Form.Group controlId=\"formAttackStrength\">\r\n\t\t\t\t\t\t<Form.Label>Range</Form.Label>\r\n\t\t\t\t\t\t<Form.Control type=\"range\" min={1} max={3} value={strength} step={1} onChange={(e) => setStrength(e.currentTarget.value)}/>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t</Form>\r\n\t\t\t</Modal.Body>\r\n\t\t\t<Modal.Footer>\r\n\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>\r\n\t\t\t\t\tЗакрыть\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"primary\" onClick={() => {\r\n\t\t\t\t\tconst item = {\r\n\t\t\t\t\t\ttype: 'Приступы',\r\n\t\t\t\t\t\tcount: count,\r\n\t\t\t\t\t\tseries: series,\r\n\t\t\t\t\t\tstrength: strength,\r\n\t\t\t\t\t\tcolor: 'badge-danger'\r\n\t\t\t\t\t};\r\n\t\t\t\t\thandleSubmit(item)\r\n\t\t\t\t}}>\r\n\t\t\t\t\tДобавить\r\n\t\t\t\t</Button>\r\n\t\t\t</Modal.Footer>\r\n\t\t</>\r\n\t)\r\n}","import React, {useState} from 'react';\r\nimport {Button, Form, Modal} from \"react-bootstrap\";\r\n\r\nconst dl = [\r\n\t{_id: 1, title: 'Название 1', dosage: 'дозировка 1'},\r\n\t{_id: 2, title: 'Название 2', dosage: 'дозировка 2'},\r\n\t{_id: 3, title: 'Название 3', dosage: 'дозировка 3'},\r\n\t{_id: 4, title: 'Название 4', dosage: 'дозировка 4'},\r\n\t{_id: 5, title: 'Название 5', dosage: 'дозировка 5'}\r\n]\r\n\r\nexport const Drugs = ({drugsList = dl, handleClose, handleSubmit}) => {\r\n\tconst [drugs, setDrugs] = useState(() => drugsList.map((drug) => {\r\n\t\tdrug.checked = false;\r\n\t\treturn drug;\r\n\t}));\r\n\t\r\n\tconst handleChecked = (e) => {\r\n\t\tconst {id} = e.currentTarget.dataset;\r\n\t\tconst _drugs = [...drugs];\r\n\t\tconst idx = _drugs.findIndex(drug => drug._id.toString() === id.toString());\r\n\t\tif (idx !== -1) {\r\n\t\t\t_drugs[idx].checked = !_drugs[idx].checked;\r\n\t\t\tsetDrugs(_drugs);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t{drugs.map((drug) => (\r\n\t\t\t\t\t\t<Form.Group controlId={`formDrug-${drug._id}`} key={drug?._id}>\r\n\t\t\t\t\t\t\t<Form.Check\r\n\t\t\t\t\t\t\t\ttype={'checkbox'}\r\n\t\t\t\t\t\t\t\tdata-id={drug?._id}\r\n\t\t\t\t\t\t\t\tonChange={handleChecked}\r\n\t\t\t\t\t\t\t\tvalue={drug.checked}\r\n\t\t\t\t\t\t\t\tlabel={`${drug?.title} (${drug?.dosage})`}\r\n\t\t\t\t\t\t\t\ttitle={`${drug?.title} (${drug?.dosage})`}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Form>\r\n\t\t\t</Modal.Body>\r\n\t\t\t<Modal.Footer>\r\n\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>\r\n\t\t\t\t\tЗакрыть\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"primary\" onClick={() => {\r\n\t\t\t\t\tconst item = {\r\n\t\t\t\t\t\ttype: 'Лекарства',\r\n\t\t\t\t\t\tdrugs: drugs.filter(drug => drug.checked),\r\n\t\t\t\t\t\tcolor: 'badge-warning'\r\n\t\t\t\t\t}\r\n\t\t\t\t\thandleSubmit(item);\r\n\t\t\t\t}}>\r\n\t\t\t\t\tДобавить\r\n\t\t\t\t</Button>\r\n\t\t\t</Modal.Footer>\r\n\t\t</>\r\n\t)\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {Modal} from \"react-bootstrap\";\r\nimport {Description} from './Description.ModalPage';\r\nimport {Attack} from './Attack.ModalPage';\r\nimport {setItem} from \"../../store/data/actions\";\r\nimport {store} from \"../../index\";\r\nimport {hideModal} from \"../../store/buttonsPanel/actions\";\r\nimport {Drugs} from \"./Drugs.ModalPage\";\r\n\r\nconst ModalPageComponent = ({handleClose, showModal, modal = {},}) => {\r\n\tconst {type, description, drugs, count, series, strength} = modal;\r\n\tconst [show, setShow] = useState(false);\r\n\t\r\n\tconst handleSubmit = (item) => {\r\n\t\titem.time = new Date().getTime();\r\n\t\tstore.dispatch(setItem(item));\r\n\t\tstore.dispatch(hideModal());\r\n\t}\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (show === showModal) return;\r\n\t\tsetShow(showModal);\r\n\t}, [showModal, show]);\r\n\t\r\n\treturn (\r\n\t\t<Modal show={show} onHide={handleClose}>\r\n\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t<Modal.Title>{type}</Modal.Title>\r\n\t\t\t</Modal.Header>\r\n\t\t\t{description && <Description handleClose={handleClose} handleSubmit={handleSubmit} />}\r\n\t\t\t{(count && series && strength) && <Attack handleClose={handleClose} handleSubmit={handleSubmit} />}\r\n\t\t\t{drugs && <Drugs handleClose={handleClose} handleSubmit={handleSubmit} />}\r\n\t\t\t{/*<Modal.Body>*/}\r\n\t\t\t{/*\t<Form>*/}\r\n\t\t\t{/*\t\t{description && <Description setDescription={setDescription}/>}*/}\r\n\t\t\t{/*\t\t*/}\r\n\t\t\t{/*\t\t{drugs && <Drugs setDrugs={setDrugs}/>}*/}\r\n\t\t\t{/*\t\t*/}\r\n\t\t\t{/*\t\t{(count && series && strength) && <Attack />}*/}\r\n\t\t\t{/*\t</Form>*/}\r\n\t\t\t{/*</Modal.Body>*/}\r\n\t\t\t{/*<Modal.Footer>*/}\r\n\t\t\t{/*\t<Button variant=\"secondary\" onClick={handleClose}>*/}\r\n\t\t\t{/*\t\tЗакрыть*/}\r\n\t\t\t{/*\t</Button>*/}\r\n\t\t\t{/*\t<Button variant=\"primary\" onClick={() => {*/}\r\n\t\t\t{/*\t\tconst item = {*/}\r\n\t\t\t{/*\t\t\tdescription: formDescription,*/}\r\n\t\t\t{/*\t\t\t*/}\r\n\t\t\t{/*\t\t}*/}\r\n\t\t\t{/*\t\thandleSubmit(item)*/}\r\n\t\t\t{/*\t}}>*/}\r\n\t\t\t{/*\t\tДобавить*/}\r\n\t\t\t{/*\t</Button>*/}\r\n\t\t\t{/*</Modal.Footer>*/}\r\n\t\t</Modal>\r\n\t)\r\n}\r\n\r\n\r\n// modals: [\r\n// \t{\r\n// \t\ttype: 'еда',\r\n// \t\tdescription: true,\r\n// \t\tdrugs: false,\r\n// \t\tcount: false,\r\n// \t\tseries: false,\r\n// \t\tstrength: false,\r\n// \t},\r\n// \t{\r\n// \t\ttype: 'Лекарства',\r\n// \t\tdrugs: true,\r\n// \t\tdescription: false,\r\n// \t\tcount: false,\r\n// \t\tseries: false,\r\n// \t\tstrength: false,\r\n// \t},\r\n// \t{\r\n// \t\ttype: 'Приступы',\r\n// \t\tcount: true,\r\n// \t\tseries: true,\r\n// \t\tstrength: true,\r\n// \t\tdescription: false,\r\n// \t\tdrugs: false\r\n// \t}\r\n// ]\r\n\r\nexport default ModalPageComponent;\r\n","import React, {Component} from \"react\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport List from \"./components/timeline/List.component\";\r\nimport './App.css';\r\nimport ButtonsPanel from \"./components/buttonsPanel/ButtonsPanel.component\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {disableButton, enableButton, hideModal, showModal} from \"./store/buttonsPanel/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport {setItem} from \"./store/data/actions\";\r\nimport ModalPageComponent from \"./components/modalPage/ModalPage.component\";\r\n\r\nclass App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\t_currentDate: new Intl.DateTimeFormat('ru-RU', {day: 'numeric', month: 'long', year: 'numeric'}).format(new Date())\r\n\t\t}\r\n\t\tthis.handlerShowModal = this.handlerShowModal.bind(this);\r\n\t\tthis.handleModalFilter = this.handleModalFilter.bind(this);\r\n\t}\r\n\t\r\n\thandlerShowModal = () => {\r\n\t\tthis.props.showModal();\r\n\t}\r\n\t\r\n\thandleModalFilter = ((modalType, modals = []) => {\r\n\t\tconst idx = modals.findIndex(({type}) => modalType.toLowerCase() === type.toLowerCase());\r\n\t\treturn modals[idx];\r\n\t})\r\n\t\r\n\trender() {\r\n\t\tconst {modalType, modals} = this.props;\r\n\t\treturn (\r\n\t\t\t<Container>\r\n\t\t\t\t<div className=\"row d-flex justify-content-center mt-3 mb-auto\">\r\n\t\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t\t<div className=\"main-card mb-3 card\">\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<h5 className=\"card-title\">{this.state._currentDate}</h5>\r\n\t\t\t\t\t\t\t\t<ButtonsPanel buttons={this.props.buttons} />\r\n\t\t\t\t\t\t\t\t<List data={this.props.data} />\r\n\t\t\t\t\t\t\t\t<ModalPageComponent showModal={this.props.modalShow} handleClose={this.props.hideModal} modal={this.handleModalFilter(modalType, modals)}/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tbuttons: state.buttons.buttons,\r\n\t\tmodalShow: state.buttons.modalShow,\r\n\t\tmodalType: state.buttons.modalType,\r\n\t\tmodals: state.buttons.modals,\r\n\t\tdata: state.data\r\n\t}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n\t\tdispatch,\r\n\t\t...bindActionCreators({disableButton, enableButton, setItem, hideModal, showModal}, dispatch)\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {store} from \"../index\";\r\nimport {showModal, hideModal} from \"../store/buttonsPanel/actions\";\r\n\r\nexport function handleShowModal(e) {\r\n\treturn store.dispatch(showModal(e.currentTarget.dataset.type));\r\n}\r\n\r\nexport function handleCloseModal() {\r\n\treturn store.dispatch(hideModal());\r\n}","import {DISABLE_BUTTON, ENABLE_BUTTON, HIDE_MODAL, SHOW_MODAL} from \"./actionTypes\";\r\nimport addItemToTimeLine from \"../../_functions/addItemToTimeLine\";\r\nimport {handleShowModal} from \"../../_functions/handleModal\";\r\n\r\nconst initialState = {\r\n\tbuttons: [\r\n\t\t{\r\n\t\t\ttype: 'Сон',\r\n\t\t\tsubType: 'начало',\r\n\t\t\ticon: 'fa-bed',\r\n\t\t\tdisabled: false,\r\n\t\t\tvariant: 'primary',\r\n\t\t\tonClick: addItemToTimeLine\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: 'Еда',\r\n\t\t\ticon: 'fa-cutlery',\r\n\t\t\tdisabled: false,\r\n\t\t\tvariant: 'success',\r\n\t\t\tonClick: handleShowModal\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: 'Лекарства',\r\n\t\t\ticon: 'fa-medkit',\r\n\t\t\tdisabled: false,\r\n\t\t\tvariant: 'warning',\r\n\t\t\tonClick: handleShowModal\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: 'Приступы',\r\n\t\t\ticon: 'fa-heartbeat',\r\n\t\t\tdisabled: false,\r\n\t\t\tvariant: 'danger',\r\n\t\t\tonClick: handleShowModal\r\n\t\t}\r\n\t],\r\n\tmodalShow: false,\r\n\tmodalType: '',\r\n\tmodals: [\r\n\t\t{\r\n\t\t\ttype: 'еда',\r\n\t\t\tdescription: true,\r\n\t\t\tdrugs: false,\r\n\t\t\tcount: false,\r\n\t\t\tseries: false,\r\n\t\t\tstrength: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: 'Лекарства',\r\n\t\t\tdrugs: true,\r\n\t\t\tdescription: false,\r\n\t\t\tcount: false,\r\n\t\t\tseries: false,\r\n\t\t\tstrength: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: 'Приступы',\r\n\t\t\tcount: true,\r\n\t\t\tseries: true,\r\n\t\t\tstrength: true,\r\n\t\t\tdescription: false,\r\n\t\t\tdrugs: false\r\n\t\t}\r\n\t]\r\n};\r\n\r\nexport const buttonsPanelReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase DISABLE_BUTTON: {\r\n\t\t\tconst buttons = [...state.buttons];\r\n\t\t\tconst idx = buttons.findIndex((button) => button.type === action.payload.type);\r\n\t\t\tbuttons[idx].disabled = true;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tbuttons: [...buttons]\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ENABLE_BUTTON: {\r\n\t\t\tconst buttons = [...state.buttons];\r\n\t\t\tconst idx = buttons.findIndex((button) => button.type === action.payload.type);\r\n\t\t\tbuttons[idx].disabled = false;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tbuttons: [...buttons]\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase SHOW_MODAL: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmodalShow: true,\r\n\t\t\t\tmodalType: action.payload.modalType\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase HIDE_MODAL: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmodalShow: false,\r\n\t\t\t\tmodalType: ''\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}","import {store} from \"../index\";\r\nimport {disableButton, enableButton} from \"../store/buttonsPanel/actions\";\r\nimport {setItem} from \"../store/data/actions\";\r\n\r\nexport default function addItemToTimeLine (e) {\r\n\tconst {type, subType, color} = e.currentTarget.dataset;\r\n\tconst {disabled} = e.currentTarget.disabled;\r\n\tconst item = {\r\n\t\ttype: type,\r\n\t\tsubType: subType,\r\n\t\ttime: new Date().getTime(),\r\n\t\tcolor: `badge-${color}`\r\n\t};\r\n\tif (type.toLowerCase() === 'сон' && subType.toLowerCase() === 'начало') {\r\n\t\tif (!disabled) {\r\n\t\t\tstore.dispatch(disableButton(type))\r\n\t\t\tstore.dispatch(setItem(item));\r\n\t\t} else {\r\n\t\t\tif (type.toLowerCase() === 'сон') {\r\n\t\t\t\tstore.dispatch(enableButton(type))\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","import {SET_ITEM} from './actionTypes';\r\n\r\nconst initialState = []\r\n\r\nexport const dataReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_ITEM: {\r\n\t\t\treturn [\r\n\t\t\t\t...state,\r\n\t\t\t\taction.payload.item\r\n\t\t\t];\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// {\r\n// \ttype: 'сон',\r\n// \t\tsubType: 'начало',\r\n// \ttime: new Date().getTime(),\r\n// \tcolor: 'badge-primary'\r\n// },\r\n// {\r\n// \ttype: 'сон',\r\n// \t\tsubType: 'конец',\r\n// \tquality: 3,\r\n// \ttime: new Date().getTime(),\r\n// \tcolor: 'badge-primary'\r\n// },\r\n// {\r\n// \ttype: 'еда',\r\n// \t\tdescription: 'Брокколи с яйцом',\r\n// \ttime: new Date().getTime(),\r\n// \tcolor: 'badge-success'\r\n// },\r\n// {\r\n// \ttype: 'Лекарства',\r\n// \t\tdrugs: [\r\n// \t{\r\n// \t\ttitle: 'Депакин',\r\n// \t\tdosage: '150',\r\n// \t},\r\n// \t{\r\n// \t\ttitle: 'Магний',\r\n// \t\tdosage: '200',\r\n// \t}\r\n// ],\r\n// \ttime: new Date().getTime(),\r\n// \tcolor: 'badge-warning'\r\n// },\r\n// {\r\n// \ttype: 'Приступы',\r\n// \t\tcount: 10,\r\n// \tseries: true,\r\n// \tstrength: 1,\r\n// \ttime: new Date().getTime(),\r\n// \tcolor: 'badge-danger'\r\n// },","import {combineReducers} from \"redux\";\r\nimport {buttonsPanelReducer} from \"./buttonsPanel/reducers\";\r\nimport {dataReducer} from './data/reducers';\r\n\r\nexport default combineReducers({\r\n\tbuttons: buttonsPanelReducer,\r\n\tdata: dataReducer,\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport rootReducer from './store/reducers';\r\nimport {applyMiddleware, createStore} from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport {Provider} from 'react-redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(\r\n  applyMiddleware(thunk),\r\n));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}